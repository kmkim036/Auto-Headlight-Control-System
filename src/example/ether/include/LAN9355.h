//=========== LAN9355.h =========================
#ifndef _LAN9355_H
#define _LAN9355_H

#define BIT(x) ((unsigned char)(1<<(x)))

#define LAN9355_NUM_PORTS 3

//9.3.5 ==== VPHY Registers
#define LAN9355_VPHY_BASIC_CTRL_0 	(0x1c0F) //1c0
#define LAN9355_VPHY_BASIC_CTRL_1 	(0x0c0F)
#define LAN9355_VPHY_BASIC_STATUS_0 (0x1c4F)
#define LAN9355_VPHY_BASIC_STATUS_1 (0x0c4F)
#define LAN9355_VPHY_ID_MSB_0 		(0x1c8F)
#define LAN9355_VPHY_ID_MSB_0 		(0x0c8F)
//...
#define LAN9355_VPHY_SPECIAL_CONTROL_STATUS_0 (0x1dcF)  //index 31
#define LAN9355_VPHY_SPECIAL_CONTROL_STATUS_1 (0x0dcF)	//index 31
//bit15,9:8 = Modes:{000 = MII MAC, 001 : MII PHY,..), RMII Clock Dir, CurrSpeed  Loopback, Turbo


//LAN9355 Registers
//TABLE 5-1: SYSTEM CONTROL AND STATUS REGISTERS
//(F) DIRECT
#define LAN9355_ID_REV (0x50F) 	//0x14
	#define LAN9355_CHIP_ID 0x9355
#define LAN9355_IRQ_CFG (0x54F)	//0x15
	#define LAN9355_IRQ_CFG_IRQ_ENABLE BIT(8)
	#define LAN9355_IRQ_CFG_IRQ_POL BIT(4)
	#define LAN9355_IRQ_CFG_IRQ_TYPE BIT(0)
#define LAN9355_INT_STS (0x58F) //0x16
	#define LAN9355_INT_STS_PHY_INT2 BIT(27)
	#define LAN9355_INT_STS_PHY_INT1 BIT(26)
#define LAN9355_INT_EN (0x5CF) //0x17
	#define LAN9355_INT_EN_PHY_INT2_EN BIT(27)
	#define LAN9355_INT_EN_PHY_INT1_EN BIT(26)
#define LAN9355_BYTE_TEST (0x64F)
#define LAN9355_HW_CFG  (0x74F)	//0x1D
	#define LAN9355_HW_CFG_READY BIT(27)
	#define LAN9355_HW_CFG_AMDX_EN_PORT2 BIT(26)
	#define LAN9355_HW_CFG_AMDX_EN_PORT1 BIT(25)
#define LAN9355_PMT_CTRL (0x84F)
#define LAN9355_GPT_CFG (0x8cF)
#define LAN9355_GPT_CNT (0x90F)
#define LAN9355_FREE_RUN (0x9cF)

//9.2.20 PHYSICAL PHY REG.
//Basic PHY Registers(0..18, 24..31) can be accessed by MII or the PMI_ACCESS and PMI_DATA registers indirectly.
// DIRECT
#define LAN9355_PMI_DATA   (0xA4F) //0x29
#define LAN9355_PMI_ACCESS (0xA8F) //0x2A
	#define LAN9355_PMI_ACCESS_PHY_ADDR(x) (((x) & 0x1f) << 11)
	#define LAN9355_PMI_ACCESS_MIIRINDA(x) (((x) & 0x1f) << 6)
	#define LAN9355_PMI_ACCESS_MII_BUSY BIT(0)
	#define LAN9355_PMI_ACCESS_MII_WRITE BIT(1)

//MMD Registers can be accessed by PHY_MMD_ACCESS abd PHY_MMD_ADDR_DATA registers indirectly.

//10.6 Switch Fabric Interface Logic Registers -- Direct
#define LAN9355_MANUAL_FC_1 		0x1A0F 	//0x68	// Port 1 Manual Flow Control Register (MANUAL_FC_1)
#define LAN9355_MANUAL_FC_2 		0x1A4F	//0x69	//Port 2 Manual Flow Control Register (MANUAL_FC_2)
#define LAN9355_MANUAL_FC_0 		0x1A8F	//0x6a	// Port 0 Manual Flow Control Register (MANUAL_FC_0)
#define LAN9355_SWITCH_CSR_DATA 	0x1ACF	//0x6b	//Switch Fabric CSR Interface Data Register (SWITCH_CSR_DATA)
#define LAN9355_SWITCH_CSR_CMD 		0x1B0F	//0x6c	// Switch Fabric CSR Interface Command Register (SWITCH_CSR_CMD)
	#define LAN9355_SWITCH_CSR_CMD_BUSY BIT(31)
	#define LAN9355_SWITCH_CSR_CMD_RW BIT(30)
	#define LAN9355_SWITCH_CSR_CMD_LANES (BIT(19) | BIT(18) | BIT(17) | BIT(16))
#define LAN9355_SWITCH_MAC_ADDRH 	0x1F0F	//..//Switch Fabric MAC Address High Register (SWITCH_MAC_ADDRH)
#define LAN9355_SWITCH_MAC_ADDRL 	0x1F4F	//..//Switch Fabric MAC Address Low Register

//------- 200~2F8 :  Switch Fabric CSR Interface Direct Data Registers (SWITCH_CSR_DIRECT_DATA)
// Also can be accessed indirectly
//====== Indirect Switch Control and Status Register (CSR)
/*13.4 Switch Fabric Control and Status Registers
 * Read indirectly using SWITCH_CSR_CMD, SWITCH_CSR_DATA.
 * Some registers can be written directly.
 */
#define LAN9355_SW_DEV_ID 				0x0000
#define LAN9355_SW_RESET 				0x0001	//direct Addr=0x200F
	#define LAN9355_SW_RESET_RESET BIT	(0)
#define LAN9355_SW_IMR 					0x0004	//direct Addr=0x204F
#define LAN9355_SW_IPR 					0x0005
#define LAN9355_MAC_VER_ID_0 			0x0400

//PORT 0
#define LAN9355_MAC_RX_CFG_0 			0x0401	//direct Addr=0x208F
#define LAN9355_MAC_RX_CFG_0_DIRECT		0x208F
	#define LAN9355_MAC_RX_CFG_X_REJECT_MAC_TYPES BIT(1)
	#define LAN9355_MAC_RX_CFG_X_RX_ENABLE BIT(0)
#define LAN9355_MAC_RX_UNDSZE_CNT_0 	0x0410
#define LAN9355_MAC_RX_64_CNT_0 		0x0411
#define LAN9355_MAC_RX_127_CNT_0 		0x0412
#define LAN9355_MAC_RX_255_CNT_0 		0x413
#define LAN9355_MAC_RX_511_CNT_0 		0x0414
#define LAN9355_MAC_RX_1023_CNT_0 		0x0415
#define LAN9355_MAC_RX_MAX_CNT_0 		0x0416
#define LAN9355_MAC_RX_OVRSZE_CNT_0 	0x0417
#define LAN9355_MAC_RX_PKTOK_CNT_0 		0x0418
#define LAN9355_MAC_RX_CRCERR_CNT_0 	0x0419
#define LAN9355_MAC_RX_MULCST_CNT_0 	0x041a
#define LAN9355_MAC_RX_BRDCST_CNT_0 	0x041b
#define LAN9355_MAC_RX_PAUSE_CNT_0 		0x041c
#define LAN9355_MAC_RX_FRAG_CNT_0 		0x041d
#define LAN9355_MAC_RX_JABB_CNT_0 		0x041e
#define LAN9355_MAC_RX_ALIGN_CNT_0 		0x041f
#define LAN9355_MAC_RX_PKTLEN_CNT_0 	0x0420
#define LAN9355_MAC_RX_GOODPKTLEN_CNT_0 0x0421
#define LAN9355_MAC_RX_SYMBL_CNT_0 		0x0422
#define LAN9355_MAC_RX_CTLFRM_CNT_0 	0x0423

#define LAN9355_MAC_TX_CFG_0 			0x0440			//direct Addr=0x20CF
#define LAN9355_MAC_TX_CFG_0_DIRECT 	0x20CF
	#define LAN9355_MAC_TX_CFG_X_TX_IFG_CONFIG_DEFAULT (21 << 2)
	#define LAN9355_MAC_TX_CFG_X_TX_PAD_ENABLE BIT(1)
	#define LAN9355_MAC_TX_CFG_X_TX_ENABLE BIT(0)
#define LAN9355_MAC_TX_DEFER_CNT_0 		0x0451
#define LAN9355_MAC_TX_PAUSE_CNT_0 		0x0452
#define LAN9355_MAC_TX_PKTOK_CNT_0 		0x0453
#define LAN9355_MAC_TX_64_CNT_0 		0x0454
#define LAN9355_MAC_TX_127_CNT_0 		0x0455
#define LAN9355_MAC_TX_255_CNT_0 		0x0456
#define LAN9355_MAC_TX_511_CNT_0 		0x0457
#define LAN9355_MAC_TX_1023_CNT_0 		0x0458
#define LAN9355_MAC_TX_MAX_CNT_0 		0x0459
#define LAN9355_MAC_TX_UNDSZE_CNT_0 	0x045a
#define LAN9355_MAC_TX_PKTLEN_CNT_0 	0x045c
#define LAN9355_MAC_TX_BRDCST_CNT_0 	0x045d
#define LAN9355_MAC_TX_MULCST_CNT_0 	0x045e
#define LAN9355_MAC_TX_LATECOL_0 		0x045f
#define LAN9355_MAC_TX_EXCOL_CNT_0 		0x0460
#define LAN9355_MAC_TX_SNGLECOL_CNT_0 	0x0461
#define LAN9355_MAC_TX_MULTICOL_CNT_0 	0x0462
#define LAN9355_MAC_TX_TOTALCOL_CNT_0 	0x0463

#define LAN9355_MAC_VER_ID_1 			0x0800
//PORT1 CSR
#define LAN9355_MAC_RX_CFG_1 			0x0801		//direct Addr=0x218F
#define LAN9355_MAC_RX_CFG_1_DIRECT 	0x218F
#define LAN9355_MAC_TX_CFG_1 0x0840		//direct Addr=0x21CF
#define LAN9355_MAC_TX_CFG_1_DIRECT		0x21CF
//PORT2 CSR
#define LAN9355_MAC_VER_ID_2 0x0c00
#define LAN9355_MAC_RX_CFG_2 0x0c01		//direct Addr=0x228F
#define LAN9355_MAC_RX_CFG_2_DIRECT 	0x228F
#define LAN9355_MAC_TX_CFG_2 0x0c40		//direct Addr=0x22CF
#define LAN9355_MAC_TX_CFG_2_DIRECT 	0x22CF

#define LAN9355_SWE_ALR_CMD 				0x1800		//direct Addr=0x238F
#define LAN9355_SWE_ALR_CMD_DIRECT 			0x238F
	#define LAN9355_ALR_CMD_MAKE_ENTRY    BIT(2)
	#define LAN9355_ALR_CMD_GET_FIRST     BIT(1)
	#define LAN9355_ALR_CMD_GET_NEXT      BIT(0)
#define LAN9355_SWE_ALR_WR_DAT_0 0x1801	//direct Addr=0x23cF
#define LAN9355_SWE_ALR_WR_DAT_0_DIRECT 	0x23cF
#define LAN9355_SWE_ALR_WR_DAT_1 0x1802	//direct Addr=0x240F
#define LAN9355_SWE_ALR_WR_DAT_1_DIRECT 	0x240F
	#define LAN9355_ALR_DAT1_VALID        BIT(26)
	#define LAN9355_ALR_DAT1_END_OF_TABL  BIT(25)
	#define LAN9355_ALR_DAT1_AGE_OVERRID  BIT(25)
	#define LAN9355_ALR_DAT1_STATIC       BIT(24)
	#define LAN9355_ALR_DAT1_PORT_BITOFFS  16
	#define LAN9355_ALR_DAT1_PORT_MASK    (7 << LAN9355_ALR_DAT1_PORT_BITOFFS)
#define LAN9355_SWE_ALR_RD_DAT_0 0x1805
#define LAN9355_SWE_ALR_RD_DAT_1 0x1806
#define LAN9355_SWE_ALR_CMD_STS 	0x1808
	#define ALR_STS_MAKE_PEND     BIT(0)
#define LAN9355_SWE_VLAN_CMD 	0x180b	//direct Addr=0x248F
	#define LAN9355_SWE_VLAN_CMD_RNW BIT(5)
	#define LAN9355_SWE_VLAN_CMD_PVIDNVLAN BIT(4)
#define LAN9355_SWE_VLAN_WR_DATA 0x180c//direct Addr=0x24cF
#define LAN9355_SWE_VLAN_RD_DATA 0x180e
	#define LAN9355_SWE_VLAN_MEMBER_PORT2 BIT(17)
	#define LAN9355_SWE_VLAN_UNTAG_PORT2 BIT(16)
	#define LAN9355_SWE_VLAN_MEMBER_PORT1 BIT(15)
	#define LAN9355_SWE_VLAN_UNTAG_PORT1 BIT(14)
	#define LAN9355_SWE_VLAN_MEMBER_PORT0 BIT(13)
	#define LAN9355_SWE_VLAN_UNTAG_PORT0 BIT(12)
#define LAN9355_SWE_VLAN_CMD_STS 0x1810
#define LAN9355_SWE_GLB_INGRESS_CFG 		0x1840 //direct Addr=0x258F
#define LAN9355_SWE_GLB_INGRESS_CFG_DIRECT 	0x258F
	#define LAN9355_SWE_GLB_INGR_IGMP_TRAP BIT(7)
	#define LAN9355_SWE_GLB_INGR_IGMP_PORT(p) BIT(10 + p)
#define LAN9355_SWE_PORT_STATE 				0x1843	//direct Addr = 264F
#define LAN9355_SWE_PORT_STATE_DIRECT 		0x264F
	#define LAN9355_SWE_PORT_STATE_FORWARDING_PORT2 (0)
	#define LAN9355_SWE_PORT_STATE_LEARNING_PORT2 BIT(5)
	#define LAN9355_SWE_PORT_STATE_BLOCKING_PORT2 BIT(4)
	#define LAN9355_SWE_PORT_STATE_FORWARDING_PORT1 (0)
	#define LAN9355_SWE_PORT_STATE_LEARNING_PORT1 BIT(3)
	#define LAN9355_SWE_PORT_STATE_BLOCKING_PORT1 BIT(2)
	#define LAN9355_SWE_PORT_STATE_FORWARDING_PORT0 (0)
	#define LAN9355_SWE_PORT_STATE_LEARNING_PORT0 BIT(1)
	#define LAN9355_SWE_PORT_STATE_BLOCKING_PORT0 BIT(0)
	#define LAN9355_SWE_PORT_STATE_DISABLED_PORT0 (3)
#define LAN9355_SWE_PORT_MIRROR 			0x1846 //direct Addr=0x26cF
#define LAN9355_SWE_PORT_MIRROR_DIRECT 		0x26cF
	#define LAN9355_SWE_PORT_MIRROR_SNIFF_ALL BIT(8)
	#define LAN9355_SWE_PORT_MIRROR_SNIFFER_PORT2 BIT(7)
	#define LAN9355_SWE_PORT_MIRROR_SNIFFER_PORT1 BIT(6)
	#define LAN9355_SWE_PORT_MIRROR_SNIFFER_PORT0 BIT(5)
	#define LAN9355_SWE_PORT_MIRROR_MIRRORED_PORT2 BIT(4)
	#define LAN9355_SWE_PORT_MIRROR_MIRRORED_PORT1 BIT(3)
	#define LAN9355_SWE_PORT_MIRROR_MIRRORED_PORT0 BIT(2)
	#define LAN9355_SWE_PORT_MIRROR_ENABLE_RX_MIRRORING BIT(1)
	#define LAN9355_SWE_PORT_MIRROR_ENABLE_TX_MIRRORING BIT(0)
	#define LAN9355_SWE_PORT_MIRROR_DISABLED 0
#define LAN9355_SWE_INGRESS_PORT_TYP 			0x1847	//direct Addr=0x270F
#define LAN9355_SWE_INGRESS_PORT_TYP_DIRECT 	0x270F
	#define  LAN9355_SWE_INGRESS_PORT_TYPE_VLAN 3
#define LAN9355_BM_CFG 0x1c00	//direct Addr=0x298F
#define LAN9355_BM_EGRSS_PORT_TYPE 			0x1c0c	//direct Addr=0x2B4F
#define LAN9355_BM_EGRSS_PORT_TYPE_DIRECT 	0x2B4F	//BufferManagerEgressPortType
	#define LAN9355_BM_EGRSS_PORT_TYPE_SPECIAL_TAG_PORT2 (BIT(17) | BIT(16))
	#define LAN9355_BM_EGRSS_PORT_TYPE_SPECIAL_TAG_PORT1 (BIT(9) | BIT(8))
	#define LAN9355_BM_EGRSS_PORT_TYPE_SPECIAL_TAG_PORT0 (BIT(1) | BIT(0))

#define LAN9355_SWITCH_PORT_REG(port, reg0) (0x400 * (port) + (reg0))

//=======================================

#define LAN9355_VIRT_PHY_BASE 		(0x70<<2)
#define LAN9355_VIRT_SPECIAL_CTRL 	(0x77<<2)
	#define  LAN9355_VIRT_SPECIAL_TURBO BIT(10) /*Turbo MII Enable*/

//======== GPIO ================
#define LAN9355_GPIO_CFG 					0x1E0F
#define LAN9355_GPIO_DATA_DIR 				0x1E4F
#define LAN9355_GPIO_INT_STS_EN 			0x1E8F

//======== Reset ===============
#define LAN9355_RESET_CTL 					(0x1f8F)

/* the built-in PHYs are of type LAN911X */
#define MII_LAN911X_SPECIAL_MODES 			0x12
#define MII_LAN911X_SPECIAL_CONTROL_STATUS 	0x1f

//============1588 Related Registers
//(F) DIRECT
#define i1588_CMD_CTL (0x100F)
#define i1588_GENERAL_CONFIG (0x104F)
#define i1588_INT_STS (0x108F)
#define i1588_INT_EN  (0x10cF)
#define i1588_CLOCK_SEC (0x110F)
#define i1588_CLOCK_NS	(0x114F)
#define i1588_CLOCK_SUBNS (0x118F)
#define i1588_CLOCK_RATE_ADJ (0x11cF)
#define i1588_CLOCK_TEMP_RATE_ADJ (0x120F)
#define i1588_CLOCK_STEP_ADJ (0x128F)

#define i1588_CLOCK_TARGET_SEC_X_CHA (0x12CF)
#define i1588_CLOCK_TARGET_SEC_X_CHB (0x13CF)
#define i1588_CLOCK_TARGET_NS_X_CHA (0x130F)
#define i1588_CLOCK_TARGET_NS_X_CHB (0x140F)
#define i1588_CLOCK_TARGET_RELOAD_SEC_X_CHA (0x134F)
#define i1588_CLOCK_TARGET_RELOAD_SEC_X_CHB (0x144F)
#define i1588_CLOCK_TARGET_RELOAD_NS_X_CHA (0x138F)
#define i1588_CLOCK_TARGET_RELOAD_NS_X_CHB (0x148F)

#define i1588_BANK_PORT_GPIO_SEL (0x154F)

//======== BANK 0
#define i1588_LATENCY_X (0x1580) 		//BANK0
#define i1588_ASYM_PEERDLY_X (0x15C0)	//BANK0
#define i1588_CAP_INFO_X (0x1600)	//BANK0

//== BANK 1
#define i1588_RX_PARSE_CONFIG_X (0x1581) 		//BANK1
#define i1588_RX_TIMESTAMP_CONFIG_X (0x15C1)	//BANK1
#define i1588_RX_TS_INSERT_CONFIG_X (0x1601)	//BANK1
#define i1588_RX_CF_MOD_X (0x1641)	//BANK1
#define i1588_RX_FILTER_CONFIG_X (0x1681)	//BANK1
#define i1588_RX_INGRESS_SEC_X (0x16C1)	//BANK1
#define i1588_RX_INGRESS_NS_X (0x1701)	//BANK1
#define i1588_RX_MSG_HEADER_X (0x1741)	//BANK1
#define i1588_RX_PDREQ_SEC_X (0x1781)	//BANK1
#define i1588_RX_PDREQ_NS_X (0x17C1)	//BANK1
#define i1588_RX_PDREQ_CF_HI_X (0x1801)	//BANK1
#define i1588_RX_PDREQ_CF_LOW_X (0x1841)	//BANK1


//BANK2
#define i1588_TX_PARSE_CONFIG_X (0x1582) 		//BANK2
#define i1588_TX_TIMESTAMP_CONFIG_X (0x15C2)	//BANK2
#define i1588_TX_CF_MOD_X (0x1642)				//BANK2
#define i1588_TX_MOD2_X (0x1682)				//BANK2
#define i1588_TX_EGRESS_SEC_X (0x16C2)			//BANK2
#define i1588_TX_EGRESS_NS_X (0x1702)			//BANK2
#define i1588_TX_DREQ_SEC_X (0x1782)			//BANK2
#define i1588_TX_DREQ_NS_X (0x17C2)				//BANK2
#define i1588_TX_ONE_STEP_SYNC_SEC (0x1802)		//BANK2

//BANK3
#define i1588_GPIO_CAP_CONFIG (0x15C3)			//BANK3


#define BANK1  1
#define BANK2  2

typedef struct
{
		int32_t seconds;
		int32_t nanoseconds;
} TimeInternal;


#define SIZEOFREG 15

#define GetRegAddr(reg) ((reg) >> 6) //RegOffset(2)+BANK(4)
#define GetRegBank(reg) ((reg) & 0x0f)
#define PORT_NONE 0x0f

#define CLOCK_FASTER 1
#define CLOCK_SLOWER 0

/*
struct _Lan9355{
    uint16_t io_timeout;
    bool did_timeout;
    uint16_t timeout_start_ms;
 };// Lan9355module;
*/
struct LAN9355_1588_REG{
	unsigned short regAddr;
	unsigned char  bank;
	char *regName;
};
//===== switch

#endif //_LAN9355_H
